#!/usr/bin/env bash

# Script ini untuk mengalih-tuliskan Kamus Besar Bahasa Indonesia edisi IV
# tahun 2008 dari bentuk PDF ke bentuk teks biasa (plain text)
#
# Membutuhkan paket pdftotext, gawk, dan bash (minimal versi 4)
#
# Teks yang dihasilkan script ini masih harus disunting secara manual
#
# LICENSE ----------------------------------------------------------------------
#
# MIT License
#
# Copyright (c) 2017 Sahri Riza Umami
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# ------------------------------------------------------------------------------

# VARIABLES --------------------------------------------------------------------

# Skrip ini bergantung pada map sumber yang terletak pada direktori yang sama
# Dapatkan letak di mana skrip berada.
readonly KBBI='sumber/KBBI-IV.pdf'
readonly LEMA='sumber/Lema_Tertinggal_KBBI_Ed._Keempat_Rev_Ver_4.pdf'
readonly KBBIDIR=$(cd "$(dirname "$0")" || exit; pwd)
readonly KBBIDIROUT="$KBBIDIR/teks"
readonly BCKPDIR="$KBBIDIR/backup"
readonly TXTDIR="$KBBIDIROUT/hasil_pdftotext"
readonly GROUPDIR="$KBBIDIROUT/hasil_pengelompokkan"
readonly RESDIR="$KBBIDIROUT/hasil_akhir"
readonly KOREKSIDIR="$KBBIDIR/koreksi"

# FUNCTIONS --------------------------------------------------------------------

bantuan() {
  printf '%s\n' "
  ${0##*/} adalah skrip Bash untuk mengalihtuliskan Kamus Besar Bahasa Indonesia
  edisi IV tahun 2008 dari bentuk PDF ke bentuk teks biasa (plain text).

  Cara pakai: ${0##*/} PILIHAN

  PILIHAN:
  -a    1. Mengalihtuliskan PDF KBBI IV 2008 menjadi berkas teks biasa
        2. Mengelompokkan berkas teks berdasarkan huruf awal lema
        3. Memperbaiki karakter yang keliru diubah OCR
        Sama seperti menjalankan -t, -g, dan -u secara berurutan
  -t    Mengalihtuliskan PDF KBBI IV 2008 menjadi berkas teks biasa
  -g    Mengelompokkan berkas teks berdasarkan huruf awal lema (A sampai Z)
  -u    Memperbaiki karakter yang keliru diubah Optical Character Recognition
  -h    Tampilkan bantuan ini

  Tambahkan huruf f di depan perintah -a dan -u (menjadi -fa dan -fu) agar skrip
  secara otomatis menghapus berkas-berkas lama (yang mungkin telah Anda sunting).

  Secara asali skrip akan mengambil jeda untuk menanyakan apa yang harus dilakukan
  terhadap berkas-berkas terdahulu tersebut.

  Contoh penggunaan:
  1. Mengalihtuliskan PDF KBBI IV 2008 menjadi berkas teks biasa
     ${0##*/} -a
  2. Seperti no.1, dan akan menghapus berkas (hasil penyuntingan) terdahulu
     ${0##*/} -fa
  3. Mengubah isi berkas PDF KBBI menjadi berkas teks
     ${0##*/} -t
  4. Mengelompokkan berkas hasil OCR ke dalam berkas A.txt sampai Z.txt
     ${0##*/} -g
  5. Menyunting berkas hasil OCR secara otomatis
     ${0##*/} -u
  6. Seperti no.5, dan akan menghapus berkas (hasil penyuntingan) terdahulu
     ${0##*/} -fu
  7. Menampilkan teks bantuan ini
     ${0##*/} -h
"
  exit
}

teks (){ printf ':: - %s\n' "$@"; }

# Tampilkan pesan berupa huruf tebal berwarna hijau
teks_hijau(){ printf '\e[1;32m:: %s\n\e[m' "$@"; }

# Tampilkan pesan berupa huruf tebal berwarna coklat
teks_coklat(){ printf '\e[1;33m:: %s\n\e[m' "$@"; }

# Tampilkan pesan berupa huruf tebal berwarna merah
teks_merah(){ printf '\e[1;31m:: %s\n\e[m' "$@"; }

# Pengaman agar skrip tidak menghapus atau menimpa berkas-berkas yang ada
# (dan mungkin telah disunting}
berkas_lama() {
  if [[ -e $1 ]]; then
    if [[ $(find "$1" -type f -iname "*.txt" -printf '.' | wc -c) -gt 0 ]]; then
      teks_coklat 'Terdapat berkas yang mungkin berharga.'
      teks 'Ketik b untuk mencadangkannya' 'Ketik d untuk menghapusnya'
      read -rp ':: - ' tanya

      case "$tanya" in
        b)
          MAPBARU="${1##*/}_$(printf '%(%F_%H%M%S)T')"
          cp -r "$1" "$BCKPDIR/$MAPBARU"
          teks 'Map teks lama telah dicadangkan ke:' "$BCKPDIR/$MAPBARU"
        ;;
        d)
          teks 'Isi map teks lama telah dihapus'
        ;;
        *)
          teks_coklat 'Pindahkan atau hapus map tersebut kemudian jalankan kembali skrip ini.'
          exit
        ;;
      esac
      if [[ $1 == "$KBBIDIROUT" ]]; then
        rm -f "$TXTDIR"/* "$GROUPDIR"/* "$RESDIR"/*
      else
        rm -f "$RESDIR"/*
      fi
    fi
  fi
}


pdftotext_impl(){
    readonly firsts=(19 127 262 317 392 422 445 529 583 622 669 868 978 1080 1101 1115 1259 1260 1352 1598 1784 1814 1822 1836 1837 1840)

    printf ':: - %s\r' "Halaman ${1} -> $TXTDIR/kbbi4-$1.txt"
    if [[ " ${firsts[*]} " =~ " ${1} " ]]; then
        pdftotext -f "$1" -l "$1" -r 500 -eol unix -nopgbrk -x 0 -y 905 -W 1625 -H 3800 -layout "$KBBI" "$1.tmp"
    else 
        pdftotext -f "$1" -l "$1" -r 500 -eol unix -nopgbrk -x 0 -y 545 -W 1625 -H 3800 -layout "$KBBI" "$1.tmp"
    fi

    isok=$(gawk -f "checkindent.awk" "$1.tmp")
    if [ $isok = "0" ]; then  #is not ok when there is no new entry in a page column
        gawk '{print " "$0}' "$1.tmp" > "$TXTDIR/kbbi4-$1.txt" 
    else 
        mv "$1.tmp" "$TXTDIR/kbbi4-$1.txt" 
    fi
    
    
    pdftotext -f "$1" -l "$1" -r 500 -eol unix -nopgbrk -x 1630 -y 465 -W 1625 -H 3800 -layout "$KBBI" "$1.tmp"

    echo >> "$TXTDIR/kbbi4-$1.txt"
    isok=$(gawk -f "checkindent.awk" "$1.tmp")
    if [ $isok = "0" ]; then  #is not ok when there is no new entry in a page column
        gawk '{print " "$0}' "$1.tmp" >> "$TXTDIR/kbbi4-$1.txt" 
    else 
        cat "$1.tmp" >> "$TXTDIR/kbbi4-$1.txt" 
    fi
    rm "$1.tmp"
}

# Ubah pdf menjadi berkas biasa menggunakan pdftotext
pdf_ke_teks() {
  teks_hijau 'Mengubah halaman PDF menjadi halaman teks biasa'



  N=4 #paralellize up to 4
  (
  for p in {19..1844}; do
    ((i=i%N)); ((i++==0)) && wait
    pdftotext_impl $p &
  done
  )

  # Lema_Tertinggal_KBBI_Ed._Keempat_Rev_Ver_4 hanya akan diubah ke teks
  # untuk selanjutnya disunting secara manual
  # printf ':: - %s\r' "${LEMA##*/} -> $TXTDIR/${LEMA##*/}.txt"
  # pdftotext -r 500 -eol unix -nopgbrk "$LEMA" "$TXTDIR/${LEMA##*/}".txt
}

# Kelompokkan kata berdasar huruf awal
kelompokkan_kata() {
  if [[ $(find "$TXTDIR" -type f -iname "*.txt" -printf '.' | wc -c) == 0 ]]; then
    teks_merah 'Berkas hasil konversi PDF ke teks tidak ditemukan.' \
               "Jalankan ${0##*/} -t terlebih dahulu."
    exit
  fi



  # Pindah ke dalam TXTDIR agar baris perintah lebih pendek
  cd "$TXTDIR" || exit
  cp "$KOREKSIDIR"/* "$GROUPDIR"
  cat kbbi4-{19..126}.txt >> "$GROUPDIR"/kbbi4-A.txt
  cat kbbi4-{127..261}.txt >> "$GROUPDIR"/kbbi4-B.txt
  cat kbbi4-{262..316}.txt >> "$GROUPDIR"/kbbi4-C.txt
  cat kbbi4-{317..391}.txt >> "$GROUPDIR"/kbbi4-D.txt
  cat kbbi4-{392..421}.txt >> "$GROUPDIR"/kbbi4-E.txt
  cat kbbi4-{422..444}.txt >> "$GROUPDIR"/kbbi4-F.txt
  cat kbbi4-{445..528}.txt >> "$GROUPDIR"/kbbi4-G.txt
  cat kbbi4-{529..582}.txt >> "$GROUPDIR"/kbbi4-H.txt
  cat kbbi4-{583..621}.txt >> "$GROUPDIR"/kbbi4-I.txt
  cat kbbi4-{622..668}.txt >> "$GROUPDIR"/kbbi4-J.txt
  cat kbbi4-{669..867}.txt >> "$GROUPDIR"/kbbi4-K.txt
  cat kbbi4-{868..977}.txt >> "$GROUPDIR"/kbbi4-L.txt 
  cat kbbi4-{978..1079}.txt >> "$GROUPDIR"/kbbi4-M.txt
  cat kbbi4-{1080..1100}.txt >> "$GROUPDIR"/kbbi4-N.txt
  cat kbbi4-{1101..1114}.txt >> "$GROUPDIR"/kbbi4-O.txt 
  cat kbbi4-{1115..1258}.txt >> "$GROUPDIR"/kbbi4-P.txt
  cat kbbi4-1259.txt >> "$GROUPDIR"/kbbi4-Q.txt
  cat kbbi4-{1260..1351}.txt >> "$GROUPDIR"/kbbi4-R.txt
  cat kbbi4-{1352..1597}.txt >> "$GROUPDIR"/kbbi4-S.txt
  cat kbbi4-{1598..1783}.txt >> "$GROUPDIR"/kbbi4-T.txt
  cat kbbi4-{1784..1813}.txt >> "$GROUPDIR"/kbbi4-U.txt
  cat kbbi4-{1814..1821}.txt >> "$GROUPDIR"/kbbi4-V.txt
  cat kbbi4-{1822..1835}.txt >> "$GROUPDIR"/kbbi4-W.txt
  cat kbbi4-1836.txt >> "$GROUPDIR"/kbbi4-X.txt
  cat kbbi4-{1837..1839}.txt >> "$GROUPDIR"/kbbi4-Y.txt
  cat kbbi4-{1840..1844}.txt >> "$GROUPDIR"/kbbi4-Z.txt

  # Pilah lema tertinggal sesuai huruf awal kata
  # gawk "NR==20,NR==105" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-A.txt
  # gawk "NR==106,NR==211" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-B.txt
  # gawk "NR==213,NR==216" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-C.txt
  # gawk "NR==218,NR==237" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-D.txt
  # gawk "NR==239,NR==258" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-E.txt
  # gawk "NR==260,NR==299" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-G.txt
  # gawk "NR==301,NR==304" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-H.txt
  # gawk "NR==306,NR==384" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-K.txt
  # gawk "NR==386,NR==398" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-L.txt
  # gawk "NR==400,NR==408" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-M.txt
  # gawk "NR==412,NR==419" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-N.txt
  # gawk "NR==421,NR==428" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-O.txt
  # gawk "NR==431,NR==463" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-P.txt
  # gawk "NR==466,NR==473" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-R.txt
  # gawk "NR==475,NR==499" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-S.txt
  # gawk "NR==502,NR==504" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-T.txt
  # gawk "NR==506,NR==508" "${LEMA##*/}.txt" > "$GROUPDIR"/lema-tertinggal-U.txt
}

# Perbaiki kata hasil konversi pdftotext
perbaiki_kata() {
  if [[ $(find "$GROUPDIR" -type f -iname "kbbi4-?.txt" -printf '.' | wc -c) == 0 ]]; then
    teks_merah 'Berkas hasil penggabungan tidak ditemukan.' \
               "Jalankan ${0##*/} -g terlebih dahulu."
    exit
  fi

  teks_hijau 'Memperbaiki karakter yang keliru diubah OCR'
  for i in kbbi4-{A..Z}; do
    if [[ -f $GROUPDIR/$i.txt ]]; then
      printf ':: - %s\r' "dalam lema $i"

      HURUF="${i##*-}"

      # And here is the black magic...
      # 1. KBBI 2008 menggunakan angka di depan lema yang memiliki banyak arti
      #    Angka tersebut dirasa tidak penting dan akan dihapus
      # 2. Ubah dash (yang aslinya berupa double dash) menjadi double dash
      # 3. Ubah tanda kutip “ atau ” menjadi "
      # 4. Ubah "ĺ" menjadi "->"
      # 5. Ubah " o " menjadi "->" pada baris di bawah 5 kolom
      # 6. Gabung baris berdasar lema.
      # new regex: https://regex101.com/r/RTvtF4/3
      gawk -v huruf="^[$HURUF${HURUF,,}]" '
        {
          !/^[[:digit:]]$/
          / -[[:alnum:]]/gsub(" -", " -- ")
          gsub("[“”]", "\"")
          gsub("ĺ", "->")
          /NF<5/gsub(" o ", "->")
        }
        $0 ~ /^\S/ {
          if (x && NF>1)
            print x
          else
            print x" "$0

          x=""
        }{
          x=(!x) ? $0 : x" "$0;
        }
        ENDFILE {
          print x;
        }
      ' "$GROUPDIR/$i.txt" > "$RESDIR/$i.txt"
      # Buang baris yang hanya memiliki satu kolom:
      # 1. baris paling atas yang hanya memiliki satu huruf
      # 2. baris yang memiliki satu kata dengan awalan huruf lema
      gawk -i inplace 'NF>1' "$RESDIR/$i.txt"

      # 1. pada pdf baru, terdapat artefak seperti 'A b l d = ( ^ t ) Ldt ...' yang dapat dideteksi dengan
      # regex yang panjang ini.
      # 2. delete nomor 
      # 3. rubah "   ..." menjadi "  " (tidak menjadi " " karena "  " digunakan untuk membedakan subentri dengan entri )
      # untuk ilustrasi, entri "atur" memiliki subentri "beratur" yang dibisah dengan "  " daripada " "
      # >> "atur v beratur  beratur v disusun"
      # daripada:
      # >> "atur v beratur beratur v disusun"
      # ini akan membantu jika mau memparsing lagi 
      # 4. rubah I -> l kecuali untuk huruf pertama 
      # 5. hapus "-    \S" 
      # 6. hapus leading space
      cat "$RESDIR/$i.txt" | sed -E 's/(\b(\S{1,3}\s+){7,})|((\s+\S{1,3}){7,}\b)//g' \
          | sed -E 's/[0-9]+//g' | sed -E 's/\s\s+/  /g' | sed -E 's/\b(\S+)I/\1l/g' \
          | sed -E 's/([a-Z])-\s{2,}([a-Z])/\1\2/g' | sed -E 's/^ *//g' | sed -E 's/ -- - / -- /g' > "$RESDIR/$i.tmp"

      mv "$RESDIR/$i.tmp" "$RESDIR/$i.txt" 
    fi
  done
}

# MAIN -------------------------------------------------------------------------

# Periksa ketersediaan program yang dibutuhkan
declare -a DEPS=(pdftotext gawk bash)
for ((NUM=${#DEPS[@]},i=0; i<NUM;i++)); do
  if command -v "${DEPS[i]}" &>/dev/null ; then
    unset -v 'DEPS[i]'
  fi
done

# Hentikan skrip jika program yang dibutuhkan tidak ada dalam sistem
if [[ "${#DEPS[@]}" -gt 0 ]]; then
  teks_merah 'Ada paket yang dibutuhkan tidak ada dalam sistem.'
  teks_coklat 'Pasang paket berikut sesuai distro yang digunakan:'
  teks "${DEPS[@]}"
  exit
fi

# Pastikan skrip dijalankan dalam direktorinya (sejajar dengan map sumber)
cd "$KBBIDIR" || exit

if [[ ! -d $KBBIDIR/sumber ]]; then
  teks_merah 'Tidak menemukan map sumber yang berisi berkas PDF KBBI.'
  teks 'Pastikan terdapat map bernama sumber yang berisi' "${KBBI##*/} dan" \
       "${LEMA##*/}"
  exit
fi

mkdir -p "$BCKPDIR" "$TXTDIR" "$GROUPDIR" "$RESDIR"

case "$1" in
  -a|-fa)
    if [[ $1 == '-fa' ]]; then
      rm -f "$TXTDIR"/* "$GROUPDIR"/* "$RESDIR"/*
    else
      berkas_lama "$KBBIDIROUT"
    fi
    pdf_ke_teks
    kelompokkan_kata
    perbaiki_kata
    teks_coklat 'Lihat hasil konversi di:          '
    teks "$RESDIR"
  ;;
  -t)
    pdf_ke_teks
  ;;
  -g)
    kelompokkan_kata
  ;;
  -u|-fu)
    if [[ $1 == '-fu' ]]; then
      rm -f "$RESDIR"/*
    else
      berkas_lama "$RESDIR"
    fi
    perbaiki_kata
  ;;
  *)
    bantuan
  ;;
esac

teks_hijau 'Selesai.                 '
